{"version":3,"sources":["logo.svg","Store/reducers/user-reducer.js","Store/reducers/newsfeed-reducer.js","Store/reducers/profile-reducer.js","Store/reducers/rootReducer.js","config/fbConfig.js","Store/actions/user-actions.js","components/layout/Navbar.js","components/newfeed/Newsfeed.js","components/spinner/LoadingSpinner.js","components/layout/Home.js","Store/actions/newsfeed-actions.js","components/auth/Login.js","components/auth/Signup.js","components/newfeed/Createfeed.js","components/comment/commentForm.js","components/newfeed/Singlefeed.js","components/profile/Profile.js","Store/actions/profile-actions.js","App.js","index.js"],"names":["module","exports","initialState","loading","signupError","loginError","userReducer","state","action","type","payload","userFeeds","userFeed","comments","newsfeedReducer","authError","user","profileReducer","rootReducer","combineReducers","news","profile","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","storage","db","firestore","signUpUser","data","dispatch","createUserWithEmailAndPassword","email","password","then","profileImage","photo","ref","uid","put","contentType","uploadTask","getDownloadURL","img","collection","doc","set","name","username","DOB","userId","joined","Date","toDateString","updateProfile","displayName","photoURL","getIdToken","token","secretToken","JWT","sign","localStorage","setItem","toast","success","onClose","window","location","href","catch","err","console","log","saveUser","message","error","loginUser","signInWithEmailAndPassword","saveToken","connect","signout","signOut","removeItem","useState","open","setopen","getItem","jwtdecode","className","to","src","logo","alt","onClick","viewBox","fillRule","d","Newsfeed","feeds","map","feed","i","key","style","backgroundImage","title","feedId","content","userImage","createdAt","commentCount","LoadingSpinner","isloading","getFeeds","orderBy","get","forEach","newsfeed","id","moment","fromNow","unshift","useEffect","length","loginerror","login","useForm","mode","register","handleSubmit","errors","onSubmit","htmlFor","placeholder","required","value","pattern","minLength","singuperror","signup","setValue","xmlns","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","x","y","width","height","cx","cy","r","onChange","e","file","target","files","reader","FileReader","onload","result","readAsDataURL","createfeed","image","toString","add","createFeed","jwt_decode","rows","createComment","body","newComment","update","commentFeed","getFeed","feedData","push","where","deleteFeed","batch","delete","commit","match","params","deletefeed","post","role","comment","getUser","results","updateuser","updateEmail","currentUser","updateUser","deleteuser","info","deleteUser","userData","setOpen","deletingUser","defaultValue","disabled","transition","App","path","exact","component","Home","Signup","Login","Createfeed","Singlefeed","Profile","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be7fabf0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const initialState = {\n  loading: false,\n  signupError: null,\n  loginError: null\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        ...state,\n        loading: true\n      };\n    case \"STOP_LOADING\":\n      return {\n        ...state,\n        loading: false\n      };\n    case \"LOGINERROR\":\n      return {\n        ...state,\n        loading: false,\n       loginError: action.payload\n      };\n    case \"SIGNUPERROR\":\n      return {\n        ...state,\n        loading: false,\n        signupError: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default userReducer;\n","const initialState = {\n  loading: false,\n  userFeeds: [],\n  userFeed: [],\n  comments: []\n};\n\nconst newsfeedReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        ...state,\n        loading: true\n      };\n    case \"STOP_LOADING\":\n      return {\n        ...state,\n        loading: false\n      };\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        userFeeds: action.payload\n      };\n    case \"FETCH_ONE_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        userFeed: action.payload\n      };\n    case \"FETCH_COMMENTS_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        comments: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default newsfeedReducer;\n","const initialState = {\n  loading: false,\n  authError: null,\n  user: []\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        ...state,\n        loading: true\n      };\n    case \"STOP_LOADING\":\n      return {\n        ...state,\n        loading: false\n      };\n    case \"FETCH_USER_SUCCESS\":\n      return {\n        ...state,\n        user: [action.payload]\n      };\n    default:\n      return state;\n  }\n};\nexport default profileReducer;\n","import { combineReducers } from \"redux\";\nimport userReducer from \"./user-reducer\";\nimport newsfeedReducer from \"./newsfeed-reducer\";\nimport profileReducer from \"./profile-reducer\";\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  news: newsfeedReducer,\n  profile: profileReducer\n});\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDK56Cidly4enjHGD1ZEjYPm8YrnRPjQS0\",\n  authDomain: \"react-social-media-3293d.firebaseapp.com\",\n  databaseURL: \"https://react-social-media-3293d.firebaseio.com\",\n  projectId: \"react-social-media-3293d\",\n  storageBucket: \"react-social-media-3293d.appspot.com\",\n  messagingSenderId: \"214449524061\",\n  appId: \"1:214449524061:web:da187624d7d42a31d86cb4\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const storage = firebase.storage();\nexport const db = firebase.firestore();\n","import { auth, db, storage } from \"../../config/fbConfig\";\nimport JWT from \"jsonwebtoken\";\nimport { toast } from \"react-toastify\";\n// save user\nconst saveUser = (user, data, dispatch) => {\n  // get profile image\n  const profileImage = data.photo[0];\n  const metadata = {\n    contentType: \"image/jpeg\"\n  };\n  // storage profile image in storage\n  const response = storage\n    .ref(`/users/${user.user.uid}/profile.jpg`)\n    .put(profileImage, metadata);\n  response\n    .then(uploadTask => {\n      return uploadTask.ref.getDownloadURL();\n    })\n    .then(img => {\n      // save user\n      db.collection(\"users\")\n        .doc(user.user.uid)\n        .set({\n          email: data.email,\n          name: data.username,\n          DOB: data.DOB,\n          profileImage: img,\n          userId: user.user.uid,\n          joined: new Date().toDateString()\n        });\n      // update user profile\n      return user.user.updateProfile({\n        displayName: data.username,\n        photoURL: img\n      });\n    })\n    .then(() => {\n      // get user token\n      return user.user.getIdToken();\n    })\n    .then(token => {\n      // store token in localstorage\n      const secretToken = JWT.sign({ user: user.user }, token);\n      localStorage.setItem(\"token\", secretToken);\n    })\n    .then(() => {\n      dispatch({ type: \"STOP_LOADING\" });\n      toast.success(\"Signed up successfully\", {\n        onClose: () => (window.location.href = \"/\")\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n// Signup user\nexport const signUpUser = data => {\n  return dispatch => {\n    dispatch({ type: \"LOADING\" });\n    const response = auth.createUserWithEmailAndPassword(\n      data.email,\n      data.password\n    );\n    response\n      .then(user => {\n        saveUser(user, data, dispatch);\n      })\n      .catch(err => {\n        dispatch({ type: \"STOP_LOADING\" });\n        dispatch({ type: \"SIGNUPERROR\", payload: err.message });\n        return toast.error(err.message);\n      });\n  };\n};\n\n// save token\nconst saveToken = (user, dispatch) => {\n  // get user token\n  const userToken = user.user.getIdToken();\n\n  userToken\n    .then(token => {\n      const secretToken = JWT.sign({ user: user.user }, token);\n      localStorage.setItem(\"token\", secretToken);\n    })\n    .then(() => {\n      toast.success(\"Signed in successfully\", {\n        onClose: () => (window.location.href = \"/\")\n      });\n    })\n    .then(() => {\n      dispatch({ type: \"STOP_LOADING\" });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n// login user\nexport const loginUser = data => {\n  return dispatch => {\n    dispatch({ type: \"LOADING\" });\n\n    const response = auth.signInWithEmailAndPassword(data.email, data.password);\n    response\n      .then(user => {\n        saveToken(user, dispatch);\n      })\n      .catch(err => {\n        dispatch({ type: \"STOP_LOADING\" });\n        dispatch({ type: \"LOGINERROR\", payload: err.message });\n        toast.error(err.message);\n      });\n  };\n};\n\n// Signout user\nexport const signOut = () => {\n  const response = auth.signOut();\n  response\n    .then(() => {\n      localStorage.removeItem(\"token\");\n    })\n    .then(() => {\n      window.location.href = \"/\";\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n","import React, { useState } from \"react\";\nimport logo from \"../../logo.svg\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../Store/actions/user-actions\";\nimport { Link } from \"react-router-dom\";\nimport jwtdecode from \"jwt-decode\";\nconst Navbar = ({ signout }) => {\n  const [open, setopen] = useState(false);\n  const openMenu = () => {\n    setopen(!open);\n  };\n  const token = localStorage.getItem(\"token\");\n  let user;\n  if (token) {\n    user = jwtdecode(token);\n  }\n  return (\n    <header className=\"bg-gray-900 sm:flex sm:justify-between sm:items-center sm:px-4 sm:py-3\">\n      <div className=\"flex items-center justify-between px-4 py-3 sm:p-0\">\n        <div>\n          <Link to=\"/\" className=\"flex items-center\">\n            {\" \"}\n            <img className=\"h-8\" src={logo} alt=\"react logo\" />\n            <span className=\"text-white\">Media</span>\n          </Link>\n        </div>\n        <div className=\"sm:hidden\">\n          <button\n            type=\"button\"\n            className=\"block text-gray-500 hover:text-white focus:text-white focus:outline-none\"\n            onClick={openMenu}\n          >\n            <svg className=\"h-6 w-6 fill-current\" viewBox=\"0 0 24 24\">\n              {open ? (\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M18.278 16.864a1 1 0 0 1-1.414 1.414l-4.829-4.828-4.828 4.828a1 1 0 0 1-1.414-1.414l4.828-4.829-4.828-4.828a1 1 0 0 1 1.414-1.414l4.829 4.828 4.828-4.828a1 1 0 1 1 1.414 1.414l-4.828 4.829 4.828 4.828z\"\n                />\n              ) : (\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z\"\n                />\n              )}\n            </svg>\n          </button>\n        </div>\n      </div>\n      <nav\n        className={\n          open\n            ? \"block px-2 pt-2 pb-4 sm:flex sm:p-0\"\n            : \"hidden px-2 pt-2 pb-4 sm:flex sm:p-0\"\n        }\n      >\n        {token ? (\n          <>\n            <Link\n              to=\"/create\"\n              className=\"mt-1 block px-2 py-1 text-white font-semibold rounded hover:bg-gray-800 sm:mt-0 sm:ml-2\"\n            >\n              <i className=\"fas fa-plus\"></i>\n            </Link>\n            <Link\n              to={`/profile/${user.user.uid}`}\n              className=\"mt-1 block px-2 py-1 text-white font-semibold rounded hover:bg-gray-800 sm:mt-0 sm:ml-2\"\n            >\n              Welcome, {user.user.displayName}!\n            </Link>\n            <button\n              onClick={signout}\n              className=\"mt-1 block px-2 py-1 text-white font-semibold rounded hover:bg-gray-800 sm:mt-0 sm:ml-2\"\n            >\n              Signout\n            </button>\n          </>\n        ) : (\n          <>\n            {\" \"}\n            <Link\n              to=\"/login\"\n              className=\"block px-2 py-1 text-white font-semibold rounded hover:bg-gray-800\"\n            >\n              Login\n            </Link>\n            <Link\n              to=\"/signup\"\n              className=\"mt-1 block px-2 py-1 text-white font-semibold rounded hover:bg-gray-800 sm:mt-0 sm:ml-2\"\n            >\n              Sign up\n            </Link>\n          </>\n        )}\n      </nav>\n    </header>\n  );\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    signout: () => dispatch(signOut())\n  };\n};\nexport default connect(null, mapDispatchToProps)(Navbar);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Newsfeed = ({ feeds }) => {\n  return (\n    <div className=\"flex justify-between mx-6 flex-wrap\">\n      {feeds.map((feed, i) => {\n        return (\n          <div\n            className=\"max-w-sm w-full lg:max-w-full lg:flex mb-3 sm:mb-0 lg:mb-3\"\n            key={i}\n          >\n            <div\n              className=\"h-64 lg:h-auto lg:w-48 flex-none bg-cover bg-center rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden\"\n              style={{\n                backgroundImage: `url(${feed.photo})`\n              }}\n              title=\"Woman holding a mug\"\n            ></div>\n            <div className=\"w-full h-auto border-r border-b border-l border-gray-400 lg:border-l-0 lg:border-t lg:border-gray-400 bg-white rounded-b lg:rounded-b-none lg:rounded-r p-4 flex flex-col justify-between leading-normal\">\n              <div className=\"mb-8\">\n                <p className=\"text-sm text-gray-600 flex items-center\">\n                  <Link to={`/newsfeed/${feed.feedId}`}>\n                    <i className=\"far fa-eye text-green-500\"></i>\n                    <span className=\"ml-2 text-green-500\">View Feed</span>\n                  </Link>\n                </p>\n                <p className=\"text-gray-700 text-base\">{feed.content}</p>\n              </div>\n              <div className=\"flex items-center\">\n                <img\n                  className=\"w-10 h-10 rounded-full mr-4\"\n                  src={`${feed.userImage}`}\n                  alt={`Avatar of ${feed.username}`}\n                />\n                <div className=\"text-sm\">\n                  <Link\n                    to={`/profile/${feed.userId}`}\n                    className=\"text-green-500 leading-none\"\n                  >\n                    {feed.username}\n                  </Link>\n                  <p className=\"text-gray-600\">\n                    {feed.createdAt} | <span>{feed.commentCount} Comments</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\nexport default Newsfeed;\n","import React from \"react\";\n\nconst LoadingSpinner = () => {\n  return (\n    <span className=\"text-green-500 opacity-75 my-32 mx-auto flex items-center justify-center\">\n      <i className=\"fas fa-circle-notch fa-spin fa-5x\"></i>\n    </span>\n  );\n};\nexport default LoadingSpinner;\n","import React, { Fragment, useEffect } from \"react\";\nimport Newsfeed from \"../newfeed/Newsfeed\";\nimport { connect } from \"react-redux\";\nimport { fetchFeeds } from \"../../Store/actions/newsfeed-actions\";\nimport LoadingSpinner from \"../spinner/LoadingSpinner\";\nconst Home = ({ getFeeds, isloading, feeds }) => {\n  useEffect(() => {\n    getFeeds();\n  }, [getFeeds]);\n  return (\n    <Fragment>\n      {!feeds.length ? (\n        <h2 className=\"text-2xl ml-6 my-3\">No Feeds</h2>\n      ) : (\n        <h2 className=\"text-2xl ml-6 my-3\">Latest Feeds</h2>\n      )}\n\n      {isloading ? <LoadingSpinner /> : <Newsfeed feeds={feeds} />}\n    </Fragment>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    isloading: state.news.loading,\n    feeds: state.news.userFeeds\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getFeeds: () => dispatch(fetchFeeds())\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import { db, storage } from \"../../config/fbConfig\";\nimport { toast } from \"react-toastify\";\nimport moment from \"moment\";\n\n// Create a feed\nexport const createFeed = (data, username, userId) => {\n  return dispatch => {\n    dispatch({ type: \"LOADING\" });\n    const newsfeed = {};\n\n    // get Profile image\n    const response = storage\n      .ref(`/users/${userId}/profile.jpg`)\n      .getDownloadURL();\n    response\n      .then(img => {\n        // save feed data\n        newsfeed.username = username;\n        newsfeed.userId = userId;\n        newsfeed.photo = data.image;\n        newsfeed.userImage = img;\n        newsfeed.content = data.content;\n        newsfeed.commentCount = 0;\n        newsfeed.createdAt = new Date().toString();\n      })\n      .then(() => {\n        return db.collection(\"newsfeed\").add(newsfeed);\n      })\n      .then(() => {\n        toast.success(\"Created feed successfully\", {\n          onClose: () => (window.location.href = \"/\")\n        });\n      })\n      .then(() => {\n        dispatch({ type: \"STOP_LOADING\" });\n      });\n  };\n};\n\n// fetch feeds\nexport const fetchFeeds = () => {\n  return dispatch => {\n    dispatch({ type: \"LOADING\" });\n    let feeds = [];\n\n    const response = db\n      .collection(\"newsfeed\")\n      .orderBy(\"createdAt\", \"asc\")\n      .get();\n    response\n      .then(data => {\n        data.forEach(doc => {\n          const newsfeed = {\n            feedId: doc.id,\n            userId: doc.data().userId,\n            photo: doc.data().photo,\n            userImage: doc.data().userImage,\n            username: doc.data().username,\n            content: doc.data().content,\n            commentCount: doc.data().commentCount,\n            createdAt: moment(doc.data().createdAt).fromNow()\n          };\n          feeds.unshift(newsfeed);\n        });\n        return dispatch({ type: \"FETCH_SUCCESS\", payload: feeds });\n      })\n      .then(() => {\n        dispatch({ type: \"STOP_LOADING\" });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n};\n\n// single feed\nexport const fetchSingleFeed = feedId => {\n  return dispatch => {\n    dispatch({ type: \"LOADING\" });\n    let feedData = {};\n    let result = [];\n    let comments = [];\n\n    const response = db.doc(`/newsfeed/${feedId}`).get();\n    response\n      .then(doc => {\n        feedData.feedId = doc.id;\n        feedData.photo = doc.data().photo;\n        feedData.content = doc.data().content;\n        feedData.userId = doc.data().userId;\n        feedData.username = doc.data().username;\n        feedData.userImage = doc.data().userImage;\n        feedData.commentCount = doc.data().commentCount;\n        feedData.createdAt = moment(doc.data().createdAt).fromNow();\n        return result.push(feedData);\n      })\n      .then(() => {\n        dispatch({ type: \"FETCH_ONE_SUCCESS\", payload: result });\n      })\n      .then(() => {\n        return db\n          .collection(\"comments\")\n          .where(\"feedId\", \"==\", feedId)\n          .orderBy(\"createdAt\", \"asc\")\n          .get();\n      })\n      .then(data => {\n        data.forEach(doc => {\n          return comments.unshift(doc.data());\n        });\n        dispatch({ type: \"FETCH_COMMENTS_SUCCESS\", payload: comments });\n      })\n      .then(() => {\n        dispatch({ type: \"STOP_LOADING\" });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n};\n// comment on feed\nexport const commentFeed = (body, feedId, displayName, photoURL, uid) => {\n  return dispatch => {\n    dispatch({ type: \"LOADING\" });\n    const newComment = {};\n    // get a feed to update comment count\n    const response = db.doc(`/newsfeed/${feedId}`).get();\n    response\n      .then(doc => {\n        return doc.ref.update({\n          commentCount: doc.data().commentCount + 1\n        });\n      })\n      .then(() => {\n        newComment.feedId = feedId;\n        newComment.body = body.body;\n        newComment.displayName = displayName;\n        newComment.photoURL = photoURL;\n        newComment.uid = uid;\n        newComment.createdAt = new Date().toString();\n        return db.collection(\"comments\").add(newComment);\n      })\n      .then(() => {\n        dispatch({ type: \"STOP_LOADING\" });\n        toast.success(\"Comment Added!\", {\n          onClose: () => (window.location.href = `/newsfeed/${feedId}`)\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n};\n\n// deleting a feed\nexport const deleteFeed = feedId => {\n  return dispatch => {\n    const batch = db.batch();\n    const response = db.doc(`/newsfeed/${feedId}`).get();\n    response\n      .then(doc => {\n        return doc.ref.delete();\n      })\n      .then(() => {\n        return db\n          .collection(\"comments\")\n          .where(\"feedId\", \"==\", feedId)\n          .get();\n      })\n      .then(data => {\n        data.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch.commit();\n      })\n      .then(() => {\n        toast.success(\"Deleted successfully\", {\n          onClose: () => (window.location.href = \"/\")\n        });\n      });\n  };\n};\n","import React, { Fragment } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../Store/actions/user-actions\";\nimport LoadingSpinner from \"../spinner/LoadingSpinner\";\nconst Login = ({ isloading, login, loginerror }) => {\n  const { register, handleSubmit, errors } = useForm({ mode: \"onBlur\" });\n  const onSubmit = data => {\n    login(data);\n  };\n  return (\n    <Fragment>\n      {isloading ? (\n        <LoadingSpinner />\n      ) : (\n        <div className=\"bg-gray-200 h-screen\">\n          <div className=\"max-w-3xl mx-auto px-4 py-4\">\n            <div className=\"py-10\">\n              <div>\n                <h2 className=\"text-center text-4xl my-3\">Login</h2>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"mb-5\">\n                    <label\n                      htmlFor=\"email\"\n                      className=\"font-bold mb-1 text-gray-700 block\"\n                    >\n                      Email\n                    </label>\n                    <input\n                      name=\"email\"\n                      type=\"email\"\n                      className={\n                        errors.email\n                          ? \"w-full px-4 py-3 rounded-lg shadow-sm focus:outline-none focus:shadow-outline text-gray-600 font-medium border border-red-500\"\n                          : \"w-full px-4 py-3 rounded-lg shadow-sm focus:outline-none focus:shadow-outline text-gray-600 font-medium\"\n                      }\n                      placeholder=\"Enter your email address...\"\n                      ref={register({\n                        required: { value: true, message: \"Field is required\" },\n                        pattern: {\n                          value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                          message: \"Email is not valid\"\n                        }\n                      })}\n                    />\n                    {errors.email && (\n                      <p className=\"text-red-500 text-xs italic mt-2 ml-2\">\n                        {errors.email.message}\n                      </p>\n                    )}\n                    {loginerror && (\n                      <p className=\"text-red-500 text-xs italic mt-2 ml-2\">\n                        {loginerror}\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"mb-5\">\n                    <label\n                      htmlFor=\"password\"\n                      className=\"font-bold mb-1 text-gray-700 block\"\n                    >\n                      Password\n                    </label>\n                    <input\n                      name=\"password\"\n                      type=\"password\"\n                      className={\n                        errors.password\n                          ? \"w-full px-4 py-3 rounded-lg shadow-sm focus:outline-none focus:shadow-outline text-gray-600 font-medium border border-red-500\"\n                          : \"w-full px-4 py-3 rounded-lg shadow-sm focus:outline-none focus:shadow-outline text-gray-600 font-medium\"\n                      }\n                      placeholder=\"**********\"\n                      ref={register({\n                        required: { value: true, message: \"Field is required\" },\n                        minLength: {\n                          value: 8,\n                          message: \"Must be 8 characters long\"\n                        }\n                      })}\n                    />\n                    {errors.password && (\n                      <p className=\"text-red-500 text-xs italic mt-2 ml-2\">\n                        {errors.password.message}\n                      </p>\n                    )}\n                  </div>\n                  <button className=\"w-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mt-4\">\n                    Login\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    isloading: state.user.loading,\n    loginerror: state.user.loginError\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: data => dispatch(loginUser(data))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signUpUser } from \"../../Store/actions/user-actions\";\nimport { useForm } from \"react-hook-form\";\nimport LoadingSpinner from \"../spinner/LoadingSpinner\";\nconst Signup = ({ isloading, signup, singuperror }) => {\n  const [value, setValue] = useState();\n  const { register, handleSubmit, errors } = useForm({ mode: \"onBlur\" });\n  const handleChange = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      setValue(e.target.result);\n    };\n    reader.readAsDataURL(file);\n  };\n  const onSubmit = data => {\n    signup(data);\n  };\n  return (\n    <Fragment>\n      {isloading ? (\n        <LoadingSpinner />\n      ) : (\n        <div className=\"bg-gray-200\">\n          <div className=\"max-w-3xl mx-auto px-4 py-4\">\n            <div className=\"py-10\">\n              <div>\n                <div className=\"mb-5 text-center\">\n                  <div className=\"mx-auto w-32 h-32 mb-2 border rounded-full relative bg-gray-100 mb-4 shadow-inset\">\n                    <img\n                      id=\"image\"\n                      className=\"w-full h-32 rounded-full\"\n                      src={value}\n                      alt=\"user\"\n                    />\n                  </div>\n\n                  <label\n                    htmlFor=\"fileInput\"\n                    type=\"button\"\n                    className=\"cursor-pointer inine-flex justify-between items-center focus:outline-none border py-2 px-4 rounded-lg shadow-sm text-left text-gray-600 bg-white hover:bg-gray-100 font-medium\"\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"inline-flex flex-shrink-0 w-6 h-6 -mt-1 mr-1\"\n                      viewBox=\"0 0 24 24\"\n                      strokeWidth=\"2\"\n                      stroke=\"currentColor\"\n                      fill=\"none\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <rect\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"24\"\n                        height=\"24\"\n                        stroke=\"none\"\n                      ></rect>\n                      <path d=\"M5 7h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2\" />\n                      <circle cx=\"12\" cy=\"13\" r=\"3\" />\n                    </svg>\n                    Browse Photo\n                  </label>\n\n                  <div className=\"mx-auto w-48 text-gray-500 text-xs text-center mt-1\">\n                    Click to add profile picture\n                  </div>\n\n                  <input\n                    name=\"photo\"\n                    id=\"fileInput\"\n                    className=\"hidden\"\n                    type=\"file\"\n                    ref={register({\n                      required: { value: true, message: \"Field is required\" }\n                    })}\n                    onChange={handleChange}\n                  />\n                  {errors.photo && (\n                    <p className=\"text-red-500 text-xs italic mt-2 ml-2\">\n                      {errors.photo.message}\n                    </p>\n                  )}\n                </div>\n                <h2 className=\"text-center text-4xl my-3\">Sign up</h2>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"mb-5\">\n                    <label\n                      htmlFor=\"username\"\n                      className=\"font-bold mb-1 text-gray-700 block\"\n                    >\n                      Username\n                    </label>\n                    <input\n                      name=\"username\"\n                      type=\"text\"\n                      className={\n                        errors.username\n                          ? \"w-full px-4 py-3 rounded-lg shadow-sm focus:outline-none focus:shadow-outline text-gray-600 font-medium border border-red-500\"\n                          : \"w-full px-4 py-3 rounded-lg shadow-sm focus:outline-none focus:shadow-outline text-gray-600 font-medium\"\n                      }\n                      placeholder=\"Enter your username...\"\n                      ref={register({\n                        required: { value: true, message: \"Field is required\" },\n                        minLength: {\n                          value: 3,\n                          message: \"Must be at least 3 characters long\"\n                        }\n                      })}\n                    />\n                    {errors.username && (\n                      <p className=\"text-red-500 text-xs italic mt-2 ml-2\">\n                        {errors.username.message}\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"mb-5\">\n                    <label\n                      htmlFor=\"email\"\n                      className=\"font-bold mb-1 text-gray-700 block\"\n                    >\n                      Email\n                    </label>\n                    <input\n                      name=\"email\"\n                      type=\"email\"\n                      className={\n                        errors.email\n                          ? \"w-full px-4 py-3 rounded-lg shadow-sm focus:outline-none focus:shadow-outline text-gray-600 font-medium border border-red-500\"\n                          : \"w-full px-4 py-3 rounded-lg shadow-sm focus:outline-none focus:shadow-outline text-gray-600 font-medium\"\n                      }\n                      placeholder=\"Enter your email address...\"\n                      ref={register({\n                        required: { value: true, message: \"Field is required\" },\n                        pattern: {\n                          value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                          message: \"Email is not valid\"\n                        }\n                      })}\n                    />\n                    {errors.email && (\n                      <p className=\"text-red-500 text-xs italic mt-2 ml-2\">\n                        {errors.email.message}\n                      </p>\n                    )}\n                    {singuperror && (\n                      <p className=\"text-red-500 text-xs italic mt-2 ml-2\">\n                        {singuperror}\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"mb-5\">\n                    <label\n                      htmlFor=\"DOB\"\n                      className=\"font-bold mb-1 text-gray-700 block\"\n                    >\n                      DOB\n                    </label>\n                    <input\n                      name=\"DOB\"\n                      type=\"date\"\n                      className={\n                        errors.DOB\n                          ? \"w-full px-4 py-3 rounded-lg shadow-sm focus:outline-none focus:shadow-outline text-gray-600 font-medium border border-red-500\"\n                          : \"w-full px-4 py-3 rounded-lg shadow-sm focus:outline-none focus:shadow-outline text-gray-600 font-medium\"\n                      }\n                      placeholder=\"Enter your date of birth...\"\n                      ref={register({\n                        required: { value: true, message: \"Field is required\" }\n                      })}\n                    />\n                    {errors.DOB && (\n                      <p className=\"text-red-500 text-xs italic mt-2 ml-2\">\n                        {errors.DOB.message}\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"mb-5\">\n                    <label\n                      htmlFor=\"password\"\n                      className=\"font-bold mb-1 text-gray-700 block\"\n                    >\n                      Password\n                    </label>\n                    <input\n                      name=\"password\"\n                      type=\"password\"\n                      className={\n                        errors.password\n                          ? \"w-full px-4 py-3 rounded-lg shadow-sm focus:outline-none focus:shadow-outline text-gray-600 font-medium border border-red-500\"\n                          : \"w-full px-4 py-3 rounded-lg shadow-sm focus:outline-none focus:shadow-outline text-gray-600 font-medium\"\n                      }\n                      placeholder=\"**********\"\n                      ref={register({\n                        required: { value: true, message: \"Field is required\" },\n                        minLength: {\n                          value: 8,\n                          message: \"Must be 8 characters long\"\n                        }\n                      })}\n                    />\n                    {errors.password && (\n                      <p className=\"text-red-500 text-xs italic mt-2 ml-2\">\n                        {errors.password.message}\n                      </p>\n                    )}\n                  </div>\n                  <button className=\"w-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mt-4\">\n                    Sign up\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    isloading: state.user.loading,\n    singuperror: state.user.signupError\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    signup: data => dispatch(signUpUser(data))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import React, { Fragment } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport { createFeed } from \"../../Store/actions/newsfeed-actions\";\nimport LoadingSpinner from \"../spinner/LoadingSpinner\";\nimport jwt_decode from \"jwt-decode\";\nconst Createfeed = ({ createfeed, isloading }) => {\n  const { register, handleSubmit, errors } = useForm({ mode: \"onBlur\" });\n  const token = jwt_decode(localStorage.getItem(\"token\"));\n  let user;\n  if (token) {\n    user = token;\n  }\n  const { displayName, uid } = user.user;\n  const onSubmit = data => {\n    createfeed(data, displayName, uid);\n  };\n  return (\n    <Fragment>\n      {isloading ? (\n        <LoadingSpinner />\n      ) : (\n        <div className=\"w-full max-w-xl mx-auto mt-8\">\n          <form\n            className=\"bg-gray-100 shadow-md rounded px-8 pt-6 pb-8 mb-4\"\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <h3 className=\"mb-4 text-center text-2xl\">Create Feed</h3>\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"username\"\n              >\n                Image URL\n              </label>\n              <input\n                name=\"image\"\n                className={\n                  errors.image\n                    ? \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border border-red-500\"\n                    : \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                }\n                id=\"image\"\n                type=\"text\"\n                placeholder=\"EX: Any image from unsplash\"\n                ref={register({\n                  required: { value: true, message: \"Field is required\" }\n                })}\n              />\n              {errors.image && (\n                <p className=\"text-red-500 text-xs italic mt-2 ml-2\">\n                  {errors.image.message}\n                </p>\n              )}\n            </div>\n            <div className=\"mb-6\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"password\"\n              >\n                Content\n              </label>\n              <textarea\n                name=\"content\"\n                className={\n                  errors.content\n                    ? \"shadow appearance-none rounded border w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline border border-red-500\"\n                    : \"shadow appearance-none rounded border w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n                }\n                rows=\"8\"\n                id=\"content\"\n                type=\"text\"\n                placeholder=\"Write Your Message...\"\n                ref={register({\n                  required: { value: true, message: \"Field is required\" }\n                })}\n              ></textarea>\n              {errors.content && (\n                <p className=\"text-red-500 text-xs italic mt-2 ml-2\">\n                  {errors.content.message}\n                </p>\n              )}\n            </div>\n            <div className=\"flex items-center justify-end\">\n              <button\n                className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                type=\"submit\"\n              >\n                Create\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n    </Fragment>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    isloading: state.news.loading\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    createfeed: (data, displayName, userId) =>\n      dispatch(createFeed(data, displayName, userId))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Createfeed);\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport { commentFeed } from \"../../Store/actions/newsfeed-actions\";\nimport jwt_decode from \"jwt-decode\";\nconst CommentForm = ({ createComment, feedId }) => {\n  const { register, handleSubmit, errors } = useForm({ mode: \"onBlur\" });\n  const token = jwt_decode(localStorage.getItem(\"token\"));\n  const { displayName, uid, photoURL } = token.user;\n  const onSubmit = data => {\n    createComment(data, feedId, displayName, photoURL, uid);\n  };\n  return (\n    <div className=\"text-center py-2\">\n      <form\n        className=\"bg-white rounded-lg pt-2\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <div className=\"w-full md:w-full px-3 mb-2 mt-2\">\n            <textarea\n              className={\n                errors.body\n                  ? \"bg-gray-100 rounded border border-gray-400 leading-normal resize-none w-full h-20 py-2 px-3 font-medium placeholder-gray-700 focus:outline-none focus:bg-white border border-red-500\"\n                  : \"bg-gray-100 rounded border border-gray-400 leading-normal resize-none w-full h-20 py-2 px-3 font-medium placeholder-gray-700 focus:outline-none focus:bg-white\"\n              }\n              name=\"body\"\n              placeholder=\"Type Your Comment\"\n              ref={register({\n                required: { value: true, message: \"Field cannot be empty\" }\n              })}\n            ></textarea>\n            {errors.body && (\n              <p className=\"text-red-500 text-xs italic mt-2\">\n                {errors.body.message}\n              </p>\n            )}\n          </div>\n          <div className=\"w-full md:w-full flex items-start md:w-full px-3\">\n            <div className=\"-mr-1\">\n              <input\n                type=\"submit\"\n                className=\"bg-green-500 text-white font-medium py-1 px-4 border border-gray-400 rounded-lg tracking-wide mr-1 hover:bg-green-600\"\n                value=\"Post Comment\"\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    createComment: (data, feedId, displayName, photoURL, uid) =>\n      dispatch(commentFeed(data, feedId, displayName, photoURL, uid))\n  };\n};\nexport default connect(null, mapDispatchToProps)(CommentForm);\n","import React, { Fragment, useEffect } from \"react\";\nimport CommentForm from \"../comment/commentForm\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchSingleFeed,\n  deleteFeed\n} from \"../../Store/actions/newsfeed-actions\";\nimport LoadingSpinner from \"../spinner/LoadingSpinner\";\nimport jwt_decode from \"jwt-decode\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nconst Singlefeed = ({\n  match,\n  getFeed,\n  feed,\n  isloading,\n  comments,\n  deleteFeed\n}) => {\n  const token = localStorage.getItem(\"token\");\n  let user;\n  if (token) {\n    user = jwt_decode(token);\n  }\n  // const { uid } = token.user;\n  // const { id } = match.params;\n  useEffect(() => {\n    getFeed(match.params.id);\n  }, [match.params.id]);\n  const deletefeed = () => {\n    deleteFeed(match.params.id);\n  };\n  return (\n    <Fragment>\n      {isloading ? (\n        <LoadingSpinner />\n      ) : (\n        <div className=\"flex flex-wrap h-screen mt-6\">\n          <div className=\"w-full sm:w-1/2\">\n            {feed.map((post, i) => {\n              return (\n                <div\n                  className=\"max-w-xl mx-auto px-4 py-4 bg-white shadow-md rounded-lg\"\n                  key={i}\n                >\n                  <div className=\"py-2 flex flex-row items-center justify-between\">\n                    <div className=\"flex flex-row items-center\">\n                      <p\n                        href=\"#\"\n                        className=\"flex flex-row items-center focus:outline-none focus:shadow-outline rounded-lg\"\n                      >\n                        <img\n                          className=\"rounded-full h-8 w-8 object-cover\"\n                          src={`${post.userImage}`}\n                          alt={`${post.userImage}`}\n                        />\n                        <Link\n                          to={`/profile/${post.userId}`}\n                          className=\"ml-2 text-base text-green-500 font-medium\"\n                        >\n                          {post.username}\n                        </Link>\n                      </p>\n                    </div>\n                    <div className=\"flex flex-row items-center\">\n                      <p className=\"text-xs font-semibold text-gray-500\">\n                        {post.createdAt}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"mt-2\">\n                    <img\n                      className=\"object-cover w-full rounded-lg\"\n                      src={`${post.photo}`}\n                      alt=\"\"\n                    />\n                  </div>\n                  <div className=\"py-2 flex justify-between items-center\">\n                    <p className=\"leading-snug\">{post.content}</p>\n                    {user && user.user.uid === post.userId ? (\n                      <button\n                        onClick={deletefeed}\n                        className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n                      >\n                        Delete Feed\n                      </button>\n                    ) : null}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          <div className=\"w-full sm:w-1/2 px-6\">\n            <div className=\"divide-y divide-gray-400\">\n              {!user ? (\n                <div\n                  className=\"flex items-center bg-teal-200 border border-teal-300 text-teal-500 pl-4 pr-8 py-3 rounded\"\n                  role=\"alert\"\n                >\n                  <svg\n                    className=\"h-6 w-6 text-teal mr-4 fill-current\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 20 20\"\n                  >\n                    <path d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\" />\n                  </svg>\n                  <span className=\"block sm:inline\">\n                    Login or signup to leave a comment\n                  </span>\n                </div>\n              ) : (\n                <CommentForm feedId={match.params.id} />\n              )}\n\n              <div className=\"py-2\">\n                {!comments.length ? (\n                  <p>No comments</p>\n                ) : (\n                  comments.map((comment, i) => {\n                    return (\n                      <div\n                        className=\"flex bg-white shadow-lg rounded-lg mb-3\"\n                        key={i}\n                      >\n                        <div className=\"flex items-start px-4 py-6 w-full\">\n                          <img\n                            className=\"w-12 h-12 rounded-full object-cover mr-4 shadow\"\n                            src={`${comment.photoURL}`}\n                            alt=\"avatar\"\n                          />\n                          <div className=\"w-full\">\n                            <div className=\"flex items-center justify-between\">\n                              <h2 className=\"text-lg font-semibold text-green-500\">\n                                <Link to={`/profile/${comment.uid}`}>\n                                  {comment.displayName}\n                                </Link>\n                              </h2>\n                              <small className=\"text-sm text-gray-700\">\n                                {moment(comment.createdAt).fromNow()}\n                              </small>\n                            </div>\n                            <p className=\"mt-2 text-gray-700 text-sm\">\n                              {comment.body}\n                            </p>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    isloading: state.news.loading,\n    feed: state.news.userFeed,\n    comments: state.news.comments\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getFeed: id => dispatch(fetchSingleFeed(id)),\n    deleteFeed: feedId => dispatch(deleteFeed(feedId))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Singlefeed);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport {\n  getUser,\n  updateUser,\n  deleteUser\n} from \"../../Store/actions/profile-actions\";\nimport { Link } from \"react-router-dom\";\nimport LoadingSpinner from \"../spinner/LoadingSpinner\";\nimport jwt_decode from \"jwt-decode\";\nconst Profile = ({\n  match,\n  getUser,\n  isloading,\n  user,\n  updateuser,\n  deleteuser\n}) => {\n  const { register, handleSubmit, errors } = useForm({ mode: \"onBlur\" });\n  const [open, setOpen] = useState(false);\n  const onSubmit = data => {\n    updateuser(data);\n  };\n  const { id } = match.params;\n  const token = localStorage.getItem(\"token\");\n  let userData;\n  if (token) {\n    userData = jwt_decode(token);\n  }\n  const deletingUser = () => {\n    deleteuser(id);\n  };\n  useEffect(() => {\n    getUser(id);\n  }, [id]);\n  return (\n    <Fragment>\n      {isloading ? (\n        <LoadingSpinner />\n      ) : (\n        <>\n          {user.map((profile, i) => {\n            return (\n              <Fragment key={i}>\n                <div className=\"flex bg-gray-700 py-18 justify-center\">\n                  <div className=\"p-12 text-center max-w-2xl flex flex-wrap justify-center\">\n                    <div\n                      className=\"rounded-full h-24 w-24 bg-center bg-cover border-2 border-white\"\n                      style={{\n                        backgroundImage: `url(${profile.profileImage})`\n                      }}\n                    ></div>\n                    <div className=\"w-full text-2xl font-semibold mt-4 text-green-500\">\n                      {profile.name}\n                      <p className=\"font-normal text-gray-100 text-sm\">\n                        Joined {profile.joined}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"mx-6 mt-6 md:mx-32 divide-y divide-gray-200\">\n                  {token && userData.user.uid === id ? (\n                    <>\n                      {\" \"}\n                      <div className=\"text-center py-2\">\n                        <h3 className=\"text-center text-2xl mb-4 font-semibold\">\n                          About me\n                        </h3>\n                        <form\n                          className=\"w-full mb-6\"\n                          onSubmit={handleSubmit(onSubmit)}\n                        >\n                          <div className=\"sm:flex justify-between\">\n                            <div className=\"mb-6\">\n                              <div className=\"\">\n                                <label className=\"text-gray-600\">\n                                  Birthday\n                                </label>\n                                <input\n                                  className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500 mt-2\"\n                                  id=\"inline-full-name\"\n                                  type=\"text\"\n                                  defaultValue={`${profile.DOB}`}\n                                  disabled\n                                />\n                              </div>\n                            </div>\n                            <div className=\"mb-6\">\n                              <div className=\"\">\n                                <label className=\"text-gray-600\">Email</label>\n                                <input\n                                  name=\"updateEmail\"\n                                  className=\"bg-gray-200 appearance-none border-2 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-green-400 mt-2\"\n                                  id=\"inline-username\"\n                                  type=\"email\"\n                                  defaultValue={`${profile.email}`}\n                                  placeholder=\"Enter Email\"\n                                  ref={register({\n                                    required: {\n                                      value: true,\n                                      message: \"Field is required\"\n                                    },\n                                    pattern: {\n                                      value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                                      message: \"Email is not valid\"\n                                    }\n                                  })}\n                                />\n                                {errors.updateEmail && (\n                                  <p className=\"text-red-500 text-xs italic mt-2 ml-2\">\n                                    {errors.updateEmail.message}\n                                  </p>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            {open ? (\n                              <>\n                                <div\n                                  className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n                                  onClick={() => setOpen(false)}\n                                >\n                                  <div className=\"relative w-auto my-6 mx-auto max-w-sm\">\n                                    <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                                      <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\n                                        <h3 className=\"text-3xl font-semibold\">\n                                          Delete Account\n                                        </h3>\n                                        <button\n                                          className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                                          onClick={() => setOpen(false)}\n                                        >\n                                          <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                                            ×\n                                          </span>\n                                        </button>\n                                      </div>\n                                      <div className=\"relative p-6 flex-auto\">\n                                        <p className=\"my-4 text-gray-600 text-lg leading-relaxed\">\n                                          Are you sure you want to remove this\n                                          account, info will be erased forever!\n                                        </p>\n                                      </div>\n\n                                      <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\n                                        <button\n                                          className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\n                                          type=\"button\"\n                                          style={{\n                                            transition: \"all .15s ease\"\n                                          }}\n                                          onClick={() => setOpen(false)}\n                                        >\n                                          Close\n                                        </button>\n                                        <button\n                                          className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\n                                          type=\"button\"\n                                          style={{\n                                            transition: \"all .15s ease\"\n                                          }}\n                                          onClick={deletingUser}\n                                        >\n                                          Save\n                                        </button>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n                              </>\n                            ) : null}\n                            <div className=\"flex justify-between\">\n                              <button\n                                className=\"shadow bg-green-500 hover:bg-green-600 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n                                type=\"button\"\n                              >\n                                Update\n                              </button>\n                              <button\n                                className=\"shadow bg-red-500 hover:bg-red-600 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n                                type=\"button\"\n                                onClick={() => setOpen(true)}\n                              >\n                                Delete Account\n                              </button>\n                            </div>\n                          </div>\n                        </form>\n                      </div>\n                    </>\n                  ) : null}\n\n                  <div className=\"py-2\">\n                    <div className=\"mt-8 flex flex-col justify-center\">\n                      <h3 className=\"font-semibold text-2xl text-center\">\n                        User Feeds\n                      </h3>\n                      {!profile.feeds.length ? (\n                        <p>No feeds</p>\n                      ) : (\n                        profile.feeds.map((feed, i) => {\n                          return (\n                            <div\n                              className=\"px-8 my-4 py-4 bg-gray-200 rounded-lg shadow-md\"\n                              key={i}\n                            >\n                              <div className=\"mt-2\">\n                                <p className=\"text-2xl text-gray-700 font-bold\">\n                                  {feed.content}\n                                </p>\n                              </div>\n                              <div className=\"flex justify-between items-center mt-4\">\n                                <Link\n                                  to={`/newsfeed/${profile.feedId}`}\n                                  className=\"text-blue-600 hover:underline\"\n                                >\n                                  Read more\n                                </Link>\n                                <div>\n                                  <a className=\"flex items-center\" href=\"#\">\n                                    <img\n                                      className=\"mr-3 w-8 h-8 rounded-full\"\n                                      src={`${feed.userImage}`}\n                                      alt=\"avatar\"\n                                    />\n                                    <h1 className=\"text-gray-700 font-bold\">\n                                      {feed.username}\n                                    </h1>\n                                  </a>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </>\n      )}\n    </Fragment>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    user: state.profile.user,\n    isloading: state.profile.loading\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUser: id => dispatch(getUser(id)),\n    updateuser: email => dispatch(updateUser(email)),\n    deleteuser: uid => dispatch(deleteUser(uid))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import { db, auth, storage } from \"../../config/fbConfig\";\nimport { toast } from \"react-toastify\";\n\n// fetch user\nexport const getUser = userId => {\n  return dispatch => {\n    dispatch({ type: \"LOADING\" });\n    const results = {};\n\n    const response = db.doc(`/users/${userId}`).get();\n    response\n      .then(doc => {\n        console.log(doc.data());\n        results.name = doc.data().name;\n        results.email = doc.data().email;\n        results.DOB = doc.data().DOB;\n        results.joined = doc.data().joined;\n        results.profileImage = doc.data().profileImage;\n        results.userId = doc.data().userId;\n        return db\n          .collection(\"newsfeed\")\n          .where(\"userId\", \"==\", userId)\n          .get();\n      })\n      .then(data => {\n        results.feeds = [];\n        data.forEach(doc => {\n          results.feedId = doc.id;\n          results.feeds.unshift(doc.data());\n        });\n        dispatch({ type: \"STOP_LOADING\" });\n        return dispatch({ type: \"FETCH_USER_SUCCESS\", payload: results });\n      });\n  };\n};\n// updateUser\nexport const updateUser = ({ updateEmail }) => {\n  return dispatch => {\n    dispatch({ type: \"LOADING\" });\n\n    const currentUser = auth.currentUser;\n\n    currentUser\n      .updateEmail(updateEmail)\n      .then(() => {\n        return currentUser.updateProfile({ email: updateEmail });\n      })\n      .then(() => {\n        return db.doc(`/users/${currentUser.uid}`).get();\n      })\n      .then(doc => {\n        return doc.ref.update({ email: updateEmail });\n      })\n      .then(() => {\n        toast.success(\"Account updated\", {\n          onClose: () => (window.location.href = `/profile/${currentUser.uid}`)\n        });\n      })\n      .catch(err => {\n        toast.error(\"There was an error updating your account\");\n        console.log(err);\n      });\n  };\n};\n\n// delete user\nexport const deleteUser = uid => {\n  return dispatch => {\n    dispatch({ type: \"LOADING\" });\n    const batch = db.batch();\n\n    const removeUser = db\n      .collection(\"users\")\n      .doc(`${uid}`)\n      .delete();\n    removeUser\n      .then(() => {\n        return db\n          .collection(\"newsfeed\")\n          .where(\"userId\", \"==\", uid)\n          .get();\n      })\n      .then(data => {\n        data.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n      })\n      .then(() => {\n        return db\n          .collection(\"comments\")\n          .where(\"userId\", \"==\", uid)\n          .get();\n      })\n      .then(data => {\n        data.forEach(doc => {\n          return db\n            .collection(\"newsfeed\")\n            .doc(`/${doc.data().feedId}`)\n            .update({ commentCount: 0 });\n        });\n      })\n      .then(() => {\n        return db\n          .collection(\"comments\")\n          .where(\"userId\", \"==\", uid)\n          .get();\n      })\n      .then(data => {\n        data.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n      })\n      .then(() => {\n        return batch.commit();\n      })\n      .then(() => {\n        return storage.ref(`/users/${uid}/profile.jpg`).delete();\n      })\n      .then(() => {\n        return localStorage.removeItem(\"token\");\n      })\n      .then(() => {\n        return auth.currentUser.delete();\n      })\n      .then(() => {\n        toast.info(\"Account removed\", {\n          onClose: () => (window.location.href = \"/\")\n        });\n      })\n      .catch(err => {\n        dispatch({ type: \"STOP_LOADING\" });\n        toast.error(\"Error removing account\");\n        console.log(err);\n      });\n  };\n};\n","import React, { Fragment } from \"react\";\nimport Navbar from \"./components/layout/Navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport Home from \"./components/layout/Home\";\nimport Login from \"./components/auth/Login\";\nimport Signup from \"./components/auth/Signup\";\nimport Createfeed from \"./components/newfeed/Createfeed\";\nimport Singlefeed from \"./components/newfeed/Singlefeed\";\nimport Profile from \"./components/profile/Profile\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Router>\n        <ToastContainer />\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/create\" component={Createfeed} />\n          <Route path=\"/newsfeed/:id\" component={Singlefeed} />\n          <Route path=\"/profile/:id\" component={Profile} />\n        </Switch>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/main.css\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}